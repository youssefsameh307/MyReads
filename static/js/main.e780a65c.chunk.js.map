{"version":3,"sources":["BooksAPI.js","shelf.js","search.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","Shelf","_this","this","_this$props","props","state","react_default","a","createElement","className","currentlyReading","wantToRead","read","none","map","key","style","width","height","backgroundImage","defaultValue","onChange","e","target","value","disabled","title","authors","Component","Search","componentDidMount","setState","updateQuery","BooksAPI","newbooks","undefined","_this2","shelvedbooks","react_router_dom","to","onClick","showSearchPage","type","placeholder","event","length","filter","BooksApp","updatebook","book2","currentstate","c","_this3","react_router","exact","path","render","src_search","src_shelf","React","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e780a65c.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, {Component} from 'react'\r\n\r\n\r\nclass Shelf extends Component{\r\n    render(){\r\n      const {state,books} = this.props\r\n      const options={'currentlyReading':'Currently Reading','wantToRead':'Want to Read','read':'Read','none':'none'}\r\n      return(\r\n      <div className=\"bookshelf\">\r\n        <h2 className=\"bookshelf-title\">{options[state]}</h2>\r\n        <div className=\"bookshelf-books\">\r\n          <ol className=\"books-grid\">\r\n          \r\n          {books.map(book=>(\r\n              \r\n              <li key={book.id} id={book.id}>\r\n              <div className=\"book\" >\r\n                <div className=\"book-top\">\r\n                <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage:'imageLinks'in book?'url('+book['imageLinks']['thumbnail']+')'\r\n                  :'url(https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg)' }}></div>\r\n                  \r\n                  <div className=\"book-shelf-changer\">\r\n\r\n                    <select defaultValue={state} id={book.id} onChange={(e)=>{this.props.update(book,e.target.value)}}>\r\n                                <option value=\"move\" disabled>Move to...</option>\r\n                                <option value=\"currentlyReading\">Currently Reading</option>\r\n                                <option value=\"wantToRead\">Want to Read</option>\r\n                                <option value=\"read\">Read</option>\r\n                                <option value=\"none\">None</option>\r\n                    </select>\r\n                  \r\n                  </div>\r\n                </div>\r\n                <div className=\"book-title\">{book.title}</div>\r\n                <div className=\"book-authors\">{book.authors}</div>\r\n              </div>\r\n            </li> \r\n\r\n          ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n      )\r\n    }\r\n  \r\n\r\n\r\n}\r\n\r\nexport default Shelf ","import React, {Component} from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport {Link} from 'react-router-dom'\r\nclass Search extends Component{\r\n    state={\r\n        books:[]\r\n    }\r\n    componentDidMount=()=>{\r\n        this.setState(()=>({books:[]}))\r\n    }\r\n    updateQuery=(query)=>{\r\n        var newquery;\r\n        query===''?newquery=' ':newquery=query\r\n        BooksAPI.search(newquery)\r\n            .then((newbooks)=>{\r\n                newbooks===undefined?\r\n                this.setState(()=>({\r\n                    books:[]\r\n                })):\r\n                this.setState(()=>({\r\n                    books:newbooks\r\n                }))\r\n    })\r\n    }\r\n\r\n    render(){\r\n        var{shelvedbooks}=this.props\r\n        var {books}=this.state\r\n        return(\r\n            <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n                <Link to='/MyReads./'>\r\n              <button className=\"close-search\" onClick={() => this.setState({ showSearchPage: false })}>Close</button>\r\n              </Link>\r\n              <div className=\"search-books-input-wrapper\">\r\n                <input type=\"text\" placeholder=\"Search by title or author\" defaultValue='' onChange={(event)=> this.updateQuery(event.target.value)}/>\r\n\r\n              </div>\r\n              \r\n            </div>\r\n            <div className=\"search-books-results\">\r\n              <ol className=\"books-grid\">\r\n\r\n\r\n              {books.length>0?books.map(book=>(\r\n              \r\n              <li key={book.id} id={book.id}>\r\n              <div className=\"book\" >\r\n                <div className=\"book-top\">\r\n                <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage:'imageLinks'in book?'url('+book['imageLinks']['thumbnail']+')'\r\n                  :'url(https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg)' }}></div>\r\n                  \r\n                  <div className=\"book-shelf-changer\">\r\n\r\n                    <select defaultValue={shelvedbooks.filter((e)=>{return e.id===book.id}).length>0\r\n                    ?shelvedbooks.filter((e)=>{return e.id===book.id})[0].shelf\r\n                    :'none'\r\n                        \r\n                        } id={book.id} onChange={(e)=>{this.props.update(book,e.target.value)}}>\r\n                                <option value=\"move\" disabled>Move to...</option>\r\n                                <option value=\"currentlyReading\">Currently Reading</option>\r\n                                <option value=\"wantToRead\">Want to Read</option>\r\n                                <option value=\"read\">Read</option>\r\n                                <option value=\"none\">None</option>\r\n                    </select>\r\n                  \r\n                  </div>\r\n                </div>\r\n                <div className=\"book-title\">{book.title}</div>\r\n                <div className=\"book-authors\">{book.authors}</div>\r\n              </div>\r\n            </li> \r\n\r\n          )):<p></p>}\r\n\r\n\r\n              </ol>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\nexport default Search\r\n","import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport Shelf from './shelf'\nimport Search from './search'\nimport {Route,Link} from 'react-router-dom'\n\nclass BooksApp extends React.Component {\n  state = {\n    books:[],\n    showSearchPage: true\n  }\n\n  componentDidMount(){\n    BooksAPI.getAll()\n    .then((books)=>{\n      this.setState(()=>({\n        books:books\n      }))\n    })\n  }\n  updatebook=(book,shelf)=>{\n    var book2 = book\n    book2.shelf=shelf\n    this.setState((currentstate)=>({\n      books:currentstate.books.filter((c)=>{\n        return c.id!==book.id\n      }).concat(book2)\n    }))\n\n    BooksAPI.update(book,shelf)\n  }\n  render() {   \n    return (\n      <div className=\"app\">\n        <Route exact path='/MyReads./search' render ={()=>(\n          <Search\n          shelvedbooks={this.state.books}\n          update={this.updatebook}/>\n        )}></Route>\n        \n        \n        <Route exact path='/MyReads./' render ={()=>(\n          <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n              <div>\n              <Shelf books={this.state.books.filter((e)=>{\n                return e.shelf ===\"currentlyReading\"\n              })}\n              update={this.updatebook}\n              state='currentlyReading'/>\n\n              <Shelf books={this.state.books.filter((e)=>{\n                return e.shelf ===\"wantToRead\"\n              })}\n              update={this.updatebook}\n               state='wantToRead'/>\n\n              <Shelf books={this.state.books.filter((e)=>{\n                return e.shelf ===\"read\"\n              })}\n              update={this.updatebook}\n               state='read'/>\n\n              </div>\n            </div>\n            <Link to='/MyReads./search'>\n            <div className=\"open-search\">\n              <button onClick={() => this.setState({ showSearchPage: true })}>Add a book</button>\n            </div>\n            </Link>\n          </div>\n        )}></Route>\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(<BrowserRouter>\n    <App />\n    </BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}